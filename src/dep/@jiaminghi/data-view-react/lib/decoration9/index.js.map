{"version":3,"file":"index.js","sources":["../../src/components/decoration9/index.js"],"sourcesContent":["import React, { useRef, useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport classnames from 'classnames'\r\n\r\nimport { fade } from '@jiaminghi/color'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport useAutoResize from '../../use/autoResize'\r\n\r\nimport './style.less'\r\n\r\nconst defaultColor = ['rgba(3, 166, 224, 0.8)', 'rgba(3, 166, 224, 0.5)']\r\n\r\nconst svgWH = [100, 100]\r\n\r\nconst Decoration = ({ children, className, style, color = [], dur = 3 }) => {\r\n  const { width, height, domRef } = useAutoResize()\r\n\r\n  const polygonIdRef = useRef(`decoration-9-polygon-${Date.now()}`)\r\n\r\n  const mergedColor = useMemo(() => deepMerge(deepClone(defaultColor, true), color || []), [color])\r\n\r\n  const svgScale = useMemo(() => {\r\n    const [w, h] = svgWH\r\n\r\n    return [width / w, height / h]\r\n  }, [width, height])\r\n\r\n  const classNames = useMemo(() => classnames('dv-decoration-9', className), [\r\n    className\r\n  ])\r\n\r\n  return (\r\n    <div className={classNames} style={style} ref={domRef}>\r\n      <svg\r\n        width={`${svgWH[0]}px`}\r\n        height={`${svgWH[1]}px`}\r\n        style={{ transform: `scale(${svgScale[0]},${svgScale[1]})` }}\r\n      >\r\n        <defs>\r\n          <polygon\r\n            id={polygonIdRef.current}\r\n            points='15, 46.5, 21, 47.5, 21, 52.5, 15, 53.5'\r\n          />\r\n        </defs>\r\n\r\n        <circle\r\n          cx='50'\r\n          cy='50'\r\n          r='45'\r\n          fill='transparent'\r\n          stroke={mergedColor[1]}\r\n          strokeWidth='10'\r\n          strokeDasharray='80, 100, 30, 100'\r\n        >\r\n          <animateTransform\r\n            attributeName='transform'\r\n            type='rotate'\r\n            values='0 50 50;360 50 50'\r\n            dur={`${dur}s`}\r\n            repeatCount='indefinite'\r\n          />\r\n        </circle>\r\n\r\n        <circle\r\n          cx='50'\r\n          cy='50'\r\n          r='45'\r\n          fill='transparent'\r\n          stroke={mergedColor[0]}\r\n          strokeWidth='6'\r\n          strokeDasharray='50, 66, 100, 66'\r\n        >\r\n          <animateTransform\r\n            attributeName='transform'\r\n            type='rotate'\r\n            values='0 50 50;-360 50 50'\r\n            dur={`${dur}s`}\r\n            repeatCount='indefinite'\r\n          />\r\n        </circle>\r\n\r\n        <circle\r\n          cx='50'\r\n          cy='50'\r\n          r='38'\r\n          fill='transparent'\r\n          stroke={fade(mergedColor[1] || defaultColor[1], 30)}\r\n          strokeWidth='1'\r\n          strokeDasharray='5, 1'\r\n        />\r\n        {new Array(20).fill(0).map((foo, i) => (\r\n          <use\r\n            key={i}\r\n            href={`#${polygonIdRef.current}`}\r\n            stroke={mergedColor[1]}\r\n            fill={\r\n              Math.random() > 0.4 ? 'transparent' : mergedColor[0]\r\n            }\r\n          >\r\n            <animateTransform\r\n              attributeName='transform'\r\n              type='rotate'\r\n              values='0 50 50;360 50 50'\r\n              dur={`${dur}s`}\r\n              begin={`${i * dur / 20}s`}\r\n              repeatCount='indefinite'\r\n            />\r\n          </use>\r\n        ))}\r\n\r\n        <circle\r\n          cx='50'\r\n          cy='50'\r\n          r='26'\r\n          fill='transparent'\r\n          stroke={fade(mergedColor[1] || defaultColor[1], 30)}\r\n          strokeWidth='1'\r\n          strokeDasharray='5, 1'\r\n        />\r\n      </svg>\r\n\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nDecoration.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  color: PropTypes.array,\r\n  dur: PropTypes.number\r\n}\r\n\r\nexport default Decoration\r\n"],"names":["defaultColor","svgWH","Decoration","children","className","style","color","dur","useAutoResize","width","height","domRef","polygonIdRef","useRef","Date","now","mergedColor","useMemo","deepMerge","deepClone","svgScale","w","h","classNames","classnames","React","transform","current","fade","Array","fill","map","foo","i","Math","random","propTypes","PropTypes","node","string","object","array","number"],"mappings":"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"}