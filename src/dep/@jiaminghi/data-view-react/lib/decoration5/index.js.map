{"version":3,"file":"index.js","sources":["../../src/components/decoration5/index.js"],"sourcesContent":["import React, { useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport classnames from 'classnames'\r\n\r\nimport { getPolylineLength, deepMerge } from '@jiaminghi/charts/lib/util'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport useAutoResize from '../../use/autoResize'\r\n\r\nimport './style.less'\r\n\r\nconst defaultColor = ['#3f96a5', '#3f96a5']\r\n\r\nconst Decoration = ({ className, style, color = [] }) => {\r\n  const { width, height, domRef } = useAutoResize()\r\n\r\n  function calcSVGData() {\r\n    let line1Points = [\r\n      [0, height * 0.2],\r\n      [width * 0.18, height * 0.2],\r\n      [width * 0.2, height * 0.4],\r\n      [width * 0.25, height * 0.4],\r\n      [width * 0.27, height * 0.6],\r\n      [width * 0.72, height * 0.6],\r\n      [width * 0.75, height * 0.4],\r\n      [width * 0.8, height * 0.4],\r\n      [width * 0.82, height * 0.2],\r\n      [width, height * 0.2]\r\n    ]\r\n\r\n    let line2Points = [[width * 0.3, height * 0.8], [width * 0.7, height * 0.8]]\r\n\r\n    const line1Length = getPolylineLength(line1Points)\r\n    const line2Length = getPolylineLength(line2Points)\r\n\r\n    line1Points = line1Points.map(point => point.join(',')).join(' ')\r\n    line2Points = line2Points.map(point => point.join(',')).join(' ')\r\n\r\n    return { line1Points, line2Points, line1Length, line2Length }\r\n  }\r\n\r\n  const mergedColor = useMemo(() => deepMerge(deepClone(defaultColor, true), color || []), [color])\r\n\r\n  const { line1Points, line2Points, line1Length, line2Length } = useMemo(\r\n    calcSVGData,\r\n    [width, height]\r\n  )\r\n\r\n  const classNames = useMemo(() => classnames('dv-decoration-5', className), [\r\n    className\r\n  ])\r\n\r\n  return (\r\n    <div className={classNames} style={style} ref={domRef}>\r\n      <svg width={width} height={height}>\r\n        <polyline\r\n          fill='transparent'\r\n          stroke={mergedColor[0]}\r\n          strokeWidth='3'\r\n          points={line1Points}\r\n        >\r\n          <animate\r\n            attributeName='stroke-dasharray'\r\n            attributeType='XML'\r\n            from={`0, ${line1Length / 2}, 0, ${line1Length / 2}`}\r\n            to={`0, 0, ${line1Length}, 0`}\r\n            dur='1.2s'\r\n            begin='0s'\r\n            calcMode='spline'\r\n            keyTimes='0;1'\r\n            keySplines='0.4,1,0.49,0.98'\r\n            repeatCount='indefinite'\r\n          />\r\n        </polyline>\r\n        <polyline\r\n          fill='transparent'\r\n          stroke={mergedColor[1]}\r\n          strokeWidth='2'\r\n          points={line2Points}\r\n        >\r\n          <animate\r\n            attributeName='stroke-dasharray'\r\n            attributeType='XML'\r\n            from={`0, ${line2Length / 2}, 0, ${line2Length / 2}`}\r\n            to={`0, 0, ${line2Length}, 0`}\r\n            dur='1.2s'\r\n            begin='0s'\r\n            calcMode='spline'\r\n            keyTimes='0;1'\r\n            keySplines='.4,1,.49,.98'\r\n            repeatCount='indefinite'\r\n          />\r\n        </polyline>\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n\r\nDecoration.propTypes = {\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  color: PropTypes.array\r\n}\r\n\r\nexport default Decoration\r\n"],"names":["defaultColor","Decoration","className","style","color","useAutoResize","width","height","domRef","calcSVGData","line1Points","line2Points","line1Length","getPolylineLength","line2Length","map","point","join","mergedColor","useMemo","deepMerge","deepClone","classNames","classnames","React","propTypes","PropTypes","string","object","array"],"mappings":"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"}