{"version":3,"file":"index.js","sources":["../../src/components/flylineChart/index.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback, useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport classnames from 'classnames'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport useAutoResize from '../../use/autoResize'\r\n\r\nimport { randomExtend, getPointDistance } from '../../util/index'\r\n\r\nimport './style.less'\r\n\r\nconst defaultConfig = {\r\n  /**\r\n   * @description Flyline chart center point\r\n   * @type {Array<Number>}\r\n   * @default centerPoint = [0, 0]\r\n   */\r\n  centerPoint: [0, 0],\r\n  /**\r\n   * @description Flyline start points\r\n   * @type {Array<Array<Number>>}\r\n   * @default points = []\r\n   * @example points = [[10, 10], [100, 100]]\r\n   */\r\n  points: [],\r\n  /**\r\n   * @description Flyline width\r\n   * @type {Number}\r\n   * @default lineWidth = 1\r\n   */\r\n  lineWidth: 1,\r\n  /**\r\n   * @description Orbit color\r\n   * @type {String}\r\n   * @default orbitColor = 'rgba(103, 224, 227, .2)'\r\n   */\r\n  orbitColor: 'rgba(103, 224, 227, .2)',\r\n  /**\r\n   * @description Flyline color\r\n   * @type {String}\r\n   * @default orbitColor = '#ffde93'\r\n   */\r\n  flylineColor: '#ffde93',\r\n  /**\r\n   * @description K value\r\n   * @type {Number}\r\n   * @default k = -0.5\r\n   * @example k = -1 ~ 1\r\n   */\r\n  k: -0.5,\r\n  /**\r\n   * @description Flyline curvature\r\n   * @type {Number}\r\n   * @default curvature = 5\r\n   */\r\n  curvature: 5,\r\n  /**\r\n   * @description Flyline radius\r\n   * @type {Number}\r\n   * @default flylineRadius = 100\r\n   */\r\n  flylineRadius: 100,\r\n  /**\r\n   * @description Flyline animation duration\r\n   * @type {Array<Number>}\r\n   * @default duration = [20, 30]\r\n   */\r\n  duration: [20, 30],\r\n  /**\r\n   * @description Relative points position\r\n   * @type {Boolean}\r\n   * @default relative = true\r\n   */\r\n  relative: true,\r\n  /**\r\n   * @description Back ground image url\r\n   * @type {String}\r\n   * @default bgImgUrl = ''\r\n   * @example bgImgUrl = './img/bg.jpg'\r\n   */\r\n  bgImgUrl: '',\r\n  /**\r\n   * @description Text configuration\r\n   * @type {Object}\r\n   */\r\n  text: {\r\n    /**\r\n     * @description Text offset\r\n     * @type {Array<Number>}\r\n     * @default offset = [0, 15]\r\n     */\r\n    offset: [0, 15],\r\n    /**\r\n     * @description Text color\r\n     * @type {String}\r\n     * @default color = '#ffdb5c'\r\n     */\r\n    color: '#ffdb5c',\r\n    /**\r\n     * @description Text font size\r\n     * @type {Number}\r\n     * @default fontSize = 12\r\n     */\r\n    fontSize: 12\r\n  },\r\n  /**\r\n   * @description Halo configuration\r\n   * @type {Object}\r\n   */\r\n  halo: {\r\n    /**\r\n     * @description Weather to show halo\r\n     * @type {Boolean}\r\n     * @default show = true\r\n     * @example show = true | false\r\n     */\r\n    show: true,\r\n    /**\r\n     * @description Halo animation duration (10 = 1s)\r\n     * @type {Number}\r\n     * @default duration = 30\r\n     */\r\n    duration: 30,\r\n    /**\r\n     * @description Halo color\r\n     * @type {String}\r\n     * @default color = '#fb7293'\r\n     */\r\n    color: '#fb7293',\r\n    /**\r\n     * @description Halo max radius\r\n     * @type {Number}\r\n     * @default radius = 120\r\n     */\r\n    radius: 120\r\n  },\r\n  /**\r\n   * @description Center point img configuration\r\n   * @type {Object}\r\n   */\r\n  centerPointImg: {\r\n    /**\r\n     * @description Center point img width\r\n     * @type {Number}\r\n     * @default width = 40\r\n     */\r\n    width: 40,\r\n    /**\r\n     * @description Center point img height\r\n     * @type {Number}\r\n     * @default height = 40\r\n     */\r\n    height: 40,\r\n    /**\r\n     * @description Center point img url\r\n     * @type {String}\r\n     * @default url = ''\r\n     */\r\n    url: ''\r\n  },\r\n  /**\r\n   * @description Points img configuration\r\n   * @type {Object}\r\n   * @default radius = 120\r\n   */\r\n  pointsImg: {\r\n    /**\r\n     * @description Points img width\r\n     * @type {Number}\r\n     * @default width = 15\r\n     */\r\n    width: 15,\r\n    /**\r\n     * @description Points img height\r\n     * @type {Number}\r\n     * @default height = 15\r\n     */\r\n    height: 15,\r\n    /**\r\n     * @description Points img url\r\n     * @type {String}\r\n     * @default url = ''\r\n     */\r\n    url: ''\r\n  }\r\n}\r\n\r\nfunction getControlPoint([sx, sy], [ex, ey], { curvature, k }) {\r\n  const [mx, my] = [(sx + ex) / 2, (sy + ey) / 2]\r\n\r\n  const distance = getPointDistance([sx, sy], [ex, ey])\r\n\r\n  const targetLength = distance / curvature\r\n  const disDived = targetLength / 2\r\n\r\n  let [dx, dy] = [mx, my]\r\n\r\n  do {\r\n    dx += disDived\r\n    dy = my - k * mx + k * dx\r\n  } while (getPointDistance([mx, my], [dx, dy]) < targetLength)\r\n\r\n  return [dx, dy]\r\n}\r\n\r\nconst FlyLineChart = ({ config = {}, dev = false, className, style }) => {\r\n  const { width, height, domRef } = useAutoResize()\r\n\r\n  const { unique, gradientId, gradient2Id } = useRef({\r\n    unique: Math.random(),\r\n    gradientId: `gradient-id-${Date.now()}`,\r\n    gradient2Id: `gradient2-id-${Date.now()}`\r\n  }).current\r\n\r\n  const { mergedConfig, paths, times, texts } = useMemo(calcData, [\r\n    config,\r\n    width,\r\n    height\r\n  ])\r\n\r\n  const [lengths, setLengths] = useState([])\r\n\r\n  const pathDomRef = useRef([])\r\n\r\n  function calcData() {\r\n    const mergedConfig = getMergedConfig()\r\n\r\n    const paths = createFlylinePaths(mergedConfig)\r\n\r\n    const { duration, points } = mergedConfig\r\n\r\n    const times = points.map(foo => randomExtend(...duration) / 10)\r\n\r\n    const texts = points.map(({ text }) => text)\r\n\r\n    return { mergedConfig, paths, times, texts }\r\n  }\r\n\r\n  function getMergedConfig() {\r\n    const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n\r\n    mergedConfig.points = mergedConfig.points.map(item => {\r\n      if (Array.isArray(item)) {\r\n        return { position: item, text: '' }\r\n      }\r\n\r\n      return item\r\n    })\r\n\r\n    return mergedConfig\r\n  }\r\n\r\n  function createFlylinePaths(mergedConfig) {\r\n    let { centerPoint, relative } = mergedConfig\r\n    let points = mergedConfig.points.map(({ position }) => position)\r\n\r\n    if (relative) {\r\n      centerPoint = [width * centerPoint[0], height * centerPoint[1]]\r\n      points = points.map(([x, y]) => [width * x, height * y])\r\n    }\r\n\r\n    return points.map(point => {\r\n      const controlPoint = getControlPoint(centerPoint, point, mergedConfig)\r\n\r\n      return [point, controlPoint, centerPoint]\r\n    })\r\n  }\r\n\r\n  const consoleClickPos = useCallback(\r\n    ({ offsetX, offsetY }) => {\r\n      if (!dev) return\r\n\r\n      const relativeX = (offsetX / width).toFixed(2)\r\n      const relativeY = (offsetY / height).toFixed(2)\r\n\r\n      console.warn(\r\n        `dv-flyline-chart DEV: \\n Click Position is [${offsetX}, ${offsetY}] \\n Relative Position is [${relativeX}, ${relativeY}]`\r\n      )\r\n    },\r\n    [width, height, dev]\r\n  )\r\n\r\n  useEffect(() => {\r\n    const lengths = paths.map((foo, i) =>\r\n      pathDomRef.current[i].getTotalLength()\r\n    )\r\n\r\n    setLengths(lengths)\r\n  }, [paths])\r\n\r\n  const classNames = useMemo(() => classnames('dv-flyline-chart', className), [\r\n    className\r\n  ])\r\n\r\n  return (\r\n    <div\r\n      className={classNames}\r\n      ref={domRef}\r\n      style={{\r\n        backgroundImage: `url(${mergedConfig ? mergedConfig.bgImgUrl : ''})`,\r\n        ...style\r\n      }}\r\n      onClick={consoleClickPos}\r\n    >\r\n      {!!mergedConfig && (\r\n        <svg width={width} height={height}>\r\n          <defs>\r\n            <radialGradient id={gradientId} cx='50%' cy='50%' r='50%'>\r\n              <stop offset='0%' stopColor='#fff' stopOpacity='1' />\r\n              <stop offset='100%' stopColor='#fff' stopOpacity='0' />\r\n            </radialGradient>\r\n\r\n            <radialGradient id={gradient2Id} cx='50%' cy='50%' r='50%'>\r\n              <stop offset='0%' stopColor='#fff' stopOpacity='0' />\r\n              <stop offset='100%' stopColor='#fff' stopOpacity='1' />\r\n            </radialGradient>\r\n\r\n            {!!paths[0] && (\r\n              <circle\r\n                id={`circle${paths[0].toString()}`}\r\n                cx={paths[0][2][0]}\r\n                cy={paths[0][2][1]}\r\n              >\r\n                <animate\r\n                  attributeName='r'\r\n                  values={`1;${mergedConfig.halo.radius}`}\r\n                  dur={mergedConfig.halo.duration / 10 + 's'}\r\n                  repeatCount='indefinite'\r\n                />\r\n                <animate\r\n                  attributeName='opacity'\r\n                  values='1;0'\r\n                  dur={mergedConfig.halo.duration / 10 + 's'}\r\n                  repeatCount='indefinite'\r\n                />\r\n              </circle>\r\n            )}\r\n          </defs>\r\n\r\n          {!!paths[0] && (\r\n            <image\r\n              href={mergedConfig.centerPointImg.url}\r\n              width={mergedConfig.centerPointImg.width}\r\n              height={mergedConfig.centerPointImg.height}\r\n              x={paths[0][2][0] - mergedConfig.centerPointImg.width / 2}\r\n              y={paths[0][2][1] - mergedConfig.centerPointImg.height / 2}\r\n            />\r\n          )}\r\n\r\n          <mask id={`maskhalo${paths[0].toString()}`}>\r\n            {!!paths[0] && (\r\n              <use\r\n                href={`#circle${paths[0].toString()}`}\r\n                fill={`url(#${gradient2Id})`}\r\n              />\r\n            )}\r\n          </mask>\r\n\r\n          {!!paths[0] && mergedConfig.halo.show && (\r\n            <use\r\n              href={`#circle${paths[0].toString()}`}\r\n              fill={mergedConfig.halo.color}\r\n              mask={`url(#maskhalo${paths[0].toString()})`}\r\n            />\r\n          )}\r\n\r\n          {paths.map((path, i) => (\r\n            <g key={i}>\r\n              <defs>\r\n                <path\r\n                  id={`path${path.toString()}`}\r\n                  ref={e => (pathDomRef.current[i] = e)}\r\n                  d={`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`}\r\n                  fill='transparent'\r\n                />\r\n              </defs>\r\n\r\n              <use\r\n                href={`#path${path.toString()}`}\r\n                strokeWidth={mergedConfig.lineWidth}\r\n                stroke={mergedConfig.orbitColor}\r\n              />\r\n\r\n              {lengths[i] && (\r\n                <use\r\n                  href={`#path${path.toString()}`}\r\n                  strokeWidth={mergedConfig.lineWidth}\r\n                  stroke={mergedConfig.flylineColor}\r\n                  mask={`url(#mask${unique}${path.toString()})`}\r\n                >\r\n                  <animate\r\n                    attributeName='stroke-dasharray'\r\n                    from={`0, ${lengths[i]}`}\r\n                    to={`${lengths[i]}, 0`}\r\n                    dur={times[i] || 0}\r\n                    repeatCount='indefinite'\r\n                  />\r\n                </use>\r\n              )}\r\n\r\n              <mask id={`mask${unique}${path.toString()}`}>\r\n                <circle\r\n                  cx='0'\r\n                  cy='0'\r\n                  r={mergedConfig.flylineRadius}\r\n                  fill={`url(#${gradientId})`}\r\n                >\r\n                  <animateMotion\r\n                    dur={times[i] || 0}\r\n                    path={`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`}\r\n                    rotate='auto'\r\n                    repeatCount='indefinite'\r\n                  />\r\n                </circle>\r\n              </mask>\r\n\r\n              <image\r\n                href={mergedConfig.pointsImg.url}\r\n                width={mergedConfig.pointsImg.width}\r\n                height={mergedConfig.pointsImg.height}\r\n                x={path[0][0] - mergedConfig.pointsImg.width / 2}\r\n                y={path[0][1] - mergedConfig.pointsImg.height / 2}\r\n              />\r\n\r\n              <text\r\n                style={{ fontSize: `${mergedConfig.text.fontSize}px` }}\r\n                fill={mergedConfig.text.color}\r\n                x={path[0][0] + mergedConfig.text.offset[0]}\r\n                y={path[0][1] + mergedConfig.text.offset[1]}\r\n              >\r\n                {texts[i]}\r\n              </text>\r\n            </g>\r\n          ))}\r\n        </svg>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nFlyLineChart.propTypes = {\r\n  config: PropTypes.object,\r\n  dev: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object\r\n}\r\n\r\n// 指定 props 的默认值：\r\nFlyLineChart.defaultProps = {\r\n  config: {},\r\n  dev: false\r\n}\r\n\r\nexport default FlyLineChart\r\n"],"names":["defaultConfig","getControlPoint","sx","sy","ex","ey","curvature","k","mx","my","distance","getPointDistance","targetLength","disDived","dx","dy","FlyLineChart","config","dev","className","style","useAutoResize","width","height","domRef","useRef","Math","random","Date","now","current","unique","gradientId","gradient2Id","useMemo","calcData","mergedConfig","paths","times","texts","useState","lengths","setLengths","pathDomRef","getMergedConfig","createFlylinePaths","duration","points","map","randomExtend","text","deepMerge","deepClone","Array","isArray","item","position","centerPoint","relative","x","y","controlPoint","point","consoleClickPos","useCallback","offsetX","offsetY","relativeX","toFixed","relativeY","warn","foo","i","getTotalLength","classNames","classnames","React","bgImgUrl","toString","halo","radius","centerPointImg","url","show","color","path","e","lineWidth","orbitColor","flylineColor","flylineRadius","pointsImg","fontSize","offset","propTypes","PropTypes","object","bool","string","defaultProps"],"mappings":"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"}