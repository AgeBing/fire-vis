{"version":3,"file":"index.js","sources":["../../src/components/percentPond/index.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport classnames from 'classnames'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport './style.less'\r\n\r\nconst defaultConfig = {\r\n  /**\r\n   * @description Value\r\n   * @type {Number}\r\n   * @default value = 0\r\n   */\r\n  value: 0,\r\n  /**\r\n   * @description Colors (hex|rgb|rgba|color keywords)\r\n   * @type {Array<String>}\r\n   * @default colors = ['#00BAFF', '#3DE7C9']\r\n   * @example colors = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\r\n   */\r\n  colors: ['#3DE7C9', '#00BAFF'],\r\n  /**\r\n   * @description Border width\r\n   * @type {Number}\r\n   * @default borderWidth = 3\r\n   */\r\n  borderWidth: 3,\r\n  /**\r\n   * @description Gap between border and pond\r\n   * @type {Number}\r\n   * @default borderGap = 3\r\n   */\r\n  borderGap: 3,\r\n  /**\r\n   * @description Line dash\r\n   * @type {Array<Number>}\r\n   * @default lineDash = [5, 1]\r\n   */\r\n  lineDash: [5, 1],\r\n  /**\r\n   * @description Text color\r\n   * @type {String}\r\n   * @default textColor = '#fff'\r\n   */\r\n  textColor: '#fff',\r\n  /**\r\n   * @description Border radius\r\n   * @type {Number}\r\n   * @default borderRadius = 5\r\n   */\r\n  borderRadius: 5,\r\n  /**\r\n   * @description Local Gradient\r\n   * @type {Boolean}\r\n   * @default localGradient = false\r\n   * @example localGradient = false | true\r\n   */\r\n  localGradient: false,\r\n  /**\r\n   * @description Formatter\r\n   * @type {String}\r\n   * @default formatter = '{value}%'\r\n   */\r\n  formatter: '{value}%'\r\n}\r\n\r\nconst PercentPond = ({ config = {}, className, style }) => {\r\n  const domRef = useRef(null)\r\n\r\n  const { gradientId1, gradientId2 } = useRef({\r\n    gradientId1: `percent-pond-gradientId1-${Date.now()}`,\r\n    gradientId2: `percent-pond-gradientId2-${Date.now()}`\r\n  }).current\r\n\r\n  const [{ width, height, mergedConfig }, setState] = useState({\r\n    width: 0,\r\n    height: 0,\r\n\r\n    mergedConfig: null\r\n  })\r\n\r\n  const rectWidth = useMemo(() => {\r\n    if (!mergedConfig) return 0\r\n\r\n    const { borderWidth } = mergedConfig\r\n\r\n    return width - borderWidth\r\n  }, [mergedConfig, width])\r\n\r\n  const rectHeight = useMemo(() => {\r\n    if (!mergedConfig) return 0\r\n\r\n    const { borderWidth } = mergedConfig\r\n\r\n    return height - borderWidth\r\n  }, [mergedConfig, height])\r\n\r\n  const points = useMemo(() => {\r\n    const halfHeight = height / 2\r\n\r\n    if (!mergedConfig) return `0, ${halfHeight} 0, ${halfHeight}`\r\n\r\n    const { borderWidth, borderGap, value } = mergedConfig\r\n\r\n    const polylineLength =\r\n      ((width - (borderWidth + borderGap) * 2) / 100) * value\r\n\r\n    return `\r\n      ${borderWidth + borderGap}, ${halfHeight}\r\n      ${borderWidth + borderGap + polylineLength}, ${halfHeight + 0.001}\r\n    `\r\n  }, [mergedConfig, width, height])\r\n\r\n  const polylineWidth = useMemo(() => {\r\n    if (!mergedConfig) return 0\r\n\r\n    const { borderWidth, borderGap } = mergedConfig\r\n\r\n    return height - (borderWidth + borderGap) * 2\r\n  }, [mergedConfig, height])\r\n\r\n  const linearGradient = useMemo(() => {\r\n    if (!mergedConfig) return []\r\n\r\n    const { colors } = mergedConfig\r\n\r\n    const colorNum = colors.length\r\n\r\n    const colorOffsetGap = 100 / (colorNum - 1)\r\n\r\n    return colors.map((c, i) => [colorOffsetGap * i, c])\r\n  }, [mergedConfig])\r\n\r\n  const polylineGradient = useMemo(() => {\r\n    if (!mergedConfig) return gradientId2\r\n\r\n    if (mergedConfig.localGradient) return gradientId1\r\n\r\n    return gradientId2\r\n  }, [gradientId1, gradientId2, mergedConfig])\r\n\r\n  const gradient2XPos = useMemo(() => {\r\n    if (!mergedConfig) return '100%'\r\n\r\n    const { value } = mergedConfig\r\n\r\n    return `${200 - value}%`\r\n  }, [mergedConfig])\r\n\r\n  const details = useMemo(() => {\r\n    if (!mergedConfig) return ''\r\n\r\n    const { value, formatter } = mergedConfig\r\n\r\n    return formatter.replace('{value}', value)\r\n  }, [mergedConfig])\r\n\r\n  useEffect(() => {\r\n    const { clientWidth: width, clientHeight: height } = domRef.current\r\n\r\n    setState({\r\n      width,\r\n      height,\r\n      mergedConfig: deepMerge(deepClone(defaultConfig, true), config || {})\r\n    })\r\n  }, [config])\r\n\r\n  const classNames = useMemo(() => classnames('dv-percent-pond', className), [\r\n    className\r\n  ])\r\n\r\n  return (\r\n    <div className={classNames} style={style} ref={domRef}>\r\n      <svg>\r\n        <defs>\r\n          <linearGradient id={gradientId1} x1='0%' y1='0%' x2='100%' y2='0%'>\r\n            {linearGradient.map(lc => (\r\n              <stop key={lc[0]} offset={`${lc[0]}%`} stopColor={lc[1]} />\r\n            ))}\r\n          </linearGradient>\r\n\r\n          <linearGradient\r\n            id={gradientId2}\r\n            x1='0%'\r\n            y1='0%'\r\n            x2={gradient2XPos}\r\n            y2='0%'\r\n          >\r\n            {linearGradient.map(lc => (\r\n              <stop key={lc[0]} offset={`${lc[0]}%`} stopColor={lc[1]} />\r\n            ))}\r\n          </linearGradient>\r\n        </defs>\r\n        <rect\r\n          x={mergedConfig ? mergedConfig.borderWidth / 2 : '0'}\r\n          y={mergedConfig ? mergedConfig.borderWidth / 2 : '0'}\r\n          rx={mergedConfig ? mergedConfig.borderRadius : '0'}\r\n          ry={mergedConfig ? mergedConfig.borderRadius : '0'}\r\n          fill='transparent'\r\n          strokeWidth={mergedConfig ? mergedConfig.borderWidth : '0'}\r\n          stroke={`url(#${gradientId1})`}\r\n          width={rectWidth > 0 ? rectWidth : 0}\r\n          height={rectHeight > 0 ? rectHeight : 0}\r\n        />\r\n        <polyline\r\n          strokeWidth={polylineWidth}\r\n          strokeDasharray={mergedConfig ? mergedConfig.lineDash.join(',') : '0'}\r\n          stroke={`url(#${polylineGradient})`}\r\n          points={points}\r\n        />\r\n        <text\r\n          stroke={mergedConfig ? mergedConfig.textColor : '#fff'}\r\n          fill={mergedConfig ? mergedConfig.textColor : '#fff'}\r\n          x={width / 2}\r\n          y={height / 2}\r\n        >\r\n          {details}\r\n        </text>\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n\r\nPercentPond.propTypes = {\r\n  config: PropTypes.object,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object\r\n}\r\n\r\n// 指定 props 的默认值：\r\nPercentPond.defaultProps = {\r\n  config: {}\r\n}\r\n\r\nexport default PercentPond\r\n"],"names":["defaultConfig","PercentPond","config","className","style","domRef","useRef","Date","now","current","gradientId1","gradientId2","useState","width","height","mergedConfig","setState","rectWidth","useMemo","borderWidth","rectHeight","points","halfHeight","borderGap","value","polylineLength","polylineWidth","linearGradient","colors","colorNum","length","colorOffsetGap","map","c","i","polylineGradient","localGradient","gradient2XPos","details","formatter","replace","clientWidth","clientHeight","deepMerge","deepClone","classNames","classnames","React","lc","borderRadius","lineDash","join","textColor","propTypes","PropTypes","object","string","defaultProps"],"mappings":"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"}