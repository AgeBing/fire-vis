{"version":3,"file":"index.js","sources":["../../src/components/borderBox2/index.js"],"sourcesContent":["import React, { useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport classnames from 'classnames'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport useAutoResize from '../../use/autoResize'\r\n\r\nimport './style.less'\r\n\r\nconst defaultColor = ['#fff', 'rgba(255, 255, 255, 0.6)']\r\n\r\nconst BorderBox = ({ children, className, style, color = [] }) => {\r\n  const { width, height, domRef } = useAutoResize()\r\n\r\n  const mergedColor = useMemo(() => deepMerge(deepClone(defaultColor, true), color || []), [color])\r\n\r\n  const classNames = useMemo(() => classnames('dv-border-box-2', className), [\r\n    className\r\n  ])\r\n\r\n  return (\r\n    <div className={classNames} style={style} ref={domRef}>\r\n      <svg className='dv-border-svg-container' width={width} height={height}>\r\n        <polyline\r\n          stroke={mergedColor[0]}\r\n          points={`2, 2 ${width - 2} ,2 ${width - 2}, ${height -\r\n            2} 2, ${height - 2} 2, 2`}\r\n        />\r\n        <polyline\r\n          stroke={mergedColor[1]}\r\n          points={`6, 6 ${width - 6}, 6 ${width - 6}, ${height -\r\n            6} 6, ${height - 6} 6, 6`}\r\n        />\r\n        <circle fill={mergedColor[0]} cx='11' cy='11' r='1' />\r\n        <circle fill={mergedColor[0]} cx={width - 11} cy='11' r='1' />\r\n        <circle fill={mergedColor[0]} cx={width - 11} cy={height - 11} r='1' />\r\n        <circle fill={mergedColor[0]} cx='11' cy={height - 11} r='1' />\r\n      </svg>\r\n      <div className='border-box-content'>{children}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nBorderBox.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  color: PropTypes.array\r\n}\r\n\r\nexport default BorderBox\r\n"],"names":["defaultColor","BorderBox","children","className","style","color","useAutoResize","width","height","domRef","mergedColor","useMemo","deepMerge","deepClone","classNames","classnames","React","propTypes","PropTypes","node","string","object","array"],"mappings":";;;;;;;;;;;;;;;;AAaA,IAAMA,eAAe,CAAC,MAAD,EAAS,0BAAT,CAArB;;AAEA,IAAMC,YAAY,SAAZA,SAAY,OAAgD;MAA7CC,QAA6C,QAA7CA,QAA6C;MAAnCC,SAAmC,QAAnCA,SAAmC;MAAxBC,KAAwB,QAAxBA,KAAwB;wBAAjBC,KAAiB;MAAjBA,KAAiB,8BAAT,EAAS;;uBAC9BC,0BAD8B;MACxDC,KADwD,kBACxDA,KADwD;MACjDC,MADiD,kBACjDA,MADiD;MACzCC,MADyC,kBACzCA,MADyC;;MAG1DC,cAAcC,cAAQ;WAAMC,iBAAUC,iBAAUb,YAAV,EAAwB,IAAxB,CAAV,EAAyCK,SAAS,EAAlD,CAAN;GAAR,EAAqE,CAACA,KAAD,CAArE,CAApB;;MAEMS,aAAaH,cAAQ;WAAMI,mBAAW,iBAAX,EAA8BZ,SAA9B,CAAN;GAAR,EAAwD,CACzEA,SADyE,CAAxD,CAAnB;;SAKEa;;MAAK,WAAWF,UAAhB,EAA4B,OAAOV,KAAnC,EAA0C,KAAKK,MAA/C;;;QACO,WAAU,yBAAf,EAAyC,OAAOF,KAAhD,EAAuD,QAAQC,MAA/D;;gBAEYE,YAAY,CAAZ,CADV;2BAEkBH,QAAQ,CAAxB,cAAgCA,QAAQ,CAAxC,YAA8CC,SAC5C,CADF,cACUA,SAAS,CADnB;QAHJ;;gBAOYE,YAAY,CAAZ,CADV;2BAEkBH,QAAQ,CAAxB,cAAgCA,QAAQ,CAAxC,YAA8CC,SAC5C,CADF,cACUA,SAAS,CADnB;QARJ;+CAWU,MAAME,YAAY,CAAZ,CAAd,EAA8B,IAAG,IAAjC,EAAsC,IAAG,IAAzC,EAA8C,GAAE,GAAhD,GAXF;+CAYU,MAAMA,YAAY,CAAZ,CAAd,EAA8B,IAAIH,QAAQ,EAA1C,EAA8C,IAAG,IAAjD,EAAsD,GAAE,GAAxD,GAZF;+CAaU,MAAMG,YAAY,CAAZ,CAAd,EAA8B,IAAIH,QAAQ,EAA1C,EAA8C,IAAIC,SAAS,EAA3D,EAA+D,GAAE,GAAjE,GAbF;+CAcU,MAAME,YAAY,CAAZ,CAAd,EAA8B,IAAG,IAAjC,EAAsC,IAAIF,SAAS,EAAnD,EAAuD,GAAE,GAAzD;KAfJ;;;QAiBO,WAAU,oBAAf;;;GAlBJ;CATF;;AAgCAP,UAAUgB,SAAV,GAAsB;YACVC,yBAAUC,IADA;aAETD,yBAAUE,MAFD;SAGbF,yBAAUG,MAHG;SAIbH,yBAAUI;CAJnB;;;;"}