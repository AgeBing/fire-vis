{"version":3,"file":"index.js","sources":["../../src/components/scrollBoard/index.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport classnames from 'classnames'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport useAutoResize from '../../use/autoResize'\r\nimport { co } from '../../util'\r\n\r\nimport './style.less'\r\n\r\nconst defaultConfig = {\r\n  /**\r\n   * @description Board header\r\n   * @type {Array<String>}\r\n   * @default header = []\r\n   * @example header = ['column1', 'column2', 'column3']\r\n   */\r\n  header: [],\r\n  /**\r\n   * @description Board data\r\n   * @type {Array<Array>}\r\n   * @default data = []\r\n   */\r\n  data: [],\r\n  /**\r\n   * @description Row num\r\n   * @type {Number}\r\n   * @default rowNum = 5\r\n   */\r\n  rowNum: 5,\r\n  /**\r\n   * @description Header background color\r\n   * @type {String}\r\n   * @default headerBGC = '#00BAFF'\r\n   */\r\n  headerBGC: '#00BAFF',\r\n  /**\r\n   * @description Odd row background color\r\n   * @type {String}\r\n   * @default oddRowBGC = '#003B51'\r\n   */\r\n  oddRowBGC: '#003B51',\r\n  /**\r\n   * @description Even row background color\r\n   * @type {String}\r\n   * @default evenRowBGC = '#003B51'\r\n   */\r\n  evenRowBGC: '#0A2732',\r\n  /**\r\n   * @description Scroll wait time\r\n   * @type {Number}\r\n   * @default waitTime = 2000\r\n   */\r\n  waitTime: 2000,\r\n  /**\r\n   * @description Header height\r\n   * @type {Number}\r\n   * @default headerHeight = 35\r\n   */\r\n  headerHeight: 35,\r\n  /**\r\n   * @description Column width\r\n   * @type {Array<Number>}\r\n   * @default columnWidth = []\r\n   */\r\n  columnWidth: [],\r\n  /**\r\n   * @description Column align\r\n   * @type {Array<String>}\r\n   * @default align = []\r\n   * @example align = ['left', 'center', 'right']\r\n   */\r\n  align: [],\r\n  /**\r\n   * @description Show index\r\n   * @type {Boolean}\r\n   * @default index = false\r\n   */\r\n  index: false,\r\n  /**\r\n   * @description index Header\r\n   * @type {String}\r\n   * @default indexHeader = '#'\r\n   */\r\n  indexHeader: '#',\r\n  /**\r\n   * @description Carousel type\r\n   * @type {String}\r\n   * @default carousel = 'single'\r\n   * @example carousel = 'single' | 'page'\r\n   */\r\n  carousel: 'single'\r\n}\r\n\r\nfunction calcHeaderData({ header, index, indexHeader }) {\r\n  if (!header.length) {\r\n    return []\r\n  }\r\n\r\n  header = [...header]\r\n\r\n  if (index) header.unshift(indexHeader)\r\n\r\n  return header\r\n}\r\n\r\nfunction calcRows({ data, index, headerBGC, rowNum }) {\r\n  if (index) {\r\n    data = data.map((row, i) => {\r\n      row = [...row]\r\n\r\n      const indexTag = `<span class=\"index\" style=\"background-color: ${headerBGC};\">${i +\r\n        1}</span>`\r\n\r\n      row.unshift(indexTag)\r\n\r\n      return row\r\n    })\r\n  }\r\n\r\n  data = data.map((ceils, i) => ({ ceils, rowIndex: i }))\r\n\r\n  const rowLength = data.length\r\n\r\n  if (rowLength > rowNum && rowLength < 2 * rowNum) {\r\n    data = [...data, ...data]\r\n  }\r\n\r\n  return data.map((d, i) => ({ ...d, scroll: i }))\r\n}\r\n\r\nfunction calcAligns(mergedConfig, header) {\r\n  const columnNum = header.length\r\n\r\n  let aligns = new Array(columnNum).fill('left')\r\n\r\n  const { align } = mergedConfig\r\n\r\n  return deepMerge(aligns, align)\r\n}\r\n\r\nconst ScrollBoard = ({ onClick, config, className, style }) => {\r\n  const { width, height, domRef } = useAutoResize()\r\n\r\n  const [state, setState] = useState({\r\n    mergedConfig: null,\r\n\r\n    header: [],\r\n\r\n    rows: [],\r\n\r\n    widths: [],\r\n\r\n    heights: [],\r\n\r\n    aligns: []\r\n  })\r\n\r\n  const { mergedConfig, header, rows, widths, heights, aligns } = state\r\n\r\n  const stateRef = useRef({\r\n    ...state,\r\n    rowsData: [],\r\n    avgHeight: 0,\r\n    animationIndex: 0\r\n  })\r\n\r\n  Object.assign(stateRef.current, state)\r\n\r\n  function onResize() {\r\n    if (!mergedConfig) return\r\n\r\n    const widths = calcWidths(mergedConfig, stateRef.current.rowsData)\r\n\r\n    const heights = calcHeights(mergedConfig, header)\r\n\r\n    const data = { widths, heights }\r\n\r\n    Object.assign(stateRef.current, data)\r\n    setState(state => ({ ...state, ...data }))\r\n  }\r\n\r\n  function calcData() {\r\n    const mergedConfig = deepMerge(\r\n      deepClone(defaultConfig, true),\r\n      config || {}\r\n    )\r\n\r\n    const header = calcHeaderData(mergedConfig)\r\n\r\n    const rows = calcRows(mergedConfig)\r\n\r\n    const widths = calcWidths(mergedConfig, stateRef.current.rowsData)\r\n\r\n    const heights = calcHeights(mergedConfig, header)\r\n\r\n    const aligns = calcAligns(mergedConfig, header)\r\n\r\n    const data = {\r\n      mergedConfig,\r\n      header,\r\n      rows,\r\n      widths,\r\n      aligns,\r\n      heights\r\n    }\r\n\r\n    Object.assign(stateRef.current, data, {\r\n      rowsData: rows,\r\n      animationIndex: 0\r\n    })\r\n\r\n    setState(state => ({ ...state, ...data }))\r\n  }\r\n\r\n  function calcWidths({ columnWidth, header }, rowsData) {\r\n    const usedWidth = columnWidth.reduce((all, w) => all + w, 0)\r\n\r\n    let columnNum = 0\r\n    if (rowsData[0]) {\r\n      columnNum = rowsData[0].ceils.length\r\n    } else if (header.length) {\r\n      columnNum = header.length\r\n    }\r\n\r\n    const avgWidth = (width - usedWidth) / (columnNum - columnWidth.length)\r\n\r\n    const widths = new Array(columnNum).fill(avgWidth)\r\n\r\n    return deepMerge(widths, columnWidth)\r\n  }\r\n\r\n  function calcHeights({ headerHeight, rowNum, data }, header) {\r\n    let allHeight = height\r\n\r\n    if (header.length) allHeight -= headerHeight\r\n\r\n    const avgHeight = allHeight / rowNum\r\n\r\n    Object.assign(stateRef.current, { avgHeight })\r\n\r\n    return new Array(data.length).fill(avgHeight)\r\n  }\r\n\r\n  function* animation(start = false) {\r\n    let {\r\n      avgHeight,\r\n      animationIndex,\r\n      mergedConfig: { waitTime, carousel, rowNum },\r\n      rowsData\r\n    } = stateRef.current\r\n\r\n    const rowLength = rowsData.length\r\n\r\n    if (start) yield new Promise(resolve => setTimeout(resolve, waitTime))\r\n\r\n    const animationNum = carousel === 'single' ? 1 : rowNum\r\n\r\n    let rows = rowsData.slice(animationIndex)\r\n    rows.push(...rowsData.slice(0, animationIndex))\r\n\r\n    const heights = new Array(rowLength).fill(avgHeight)\r\n    setState(state => ({ ...state, rows, heights }))\r\n\r\n    yield new Promise(resolve => setTimeout(resolve, 300))\r\n\r\n    animationIndex += animationNum\r\n\r\n    const back = animationIndex - rowLength\r\n    if (back >= 0) animationIndex = back\r\n\r\n    const newHeights = [...heights]\r\n    newHeights.splice(0, animationNum, ...new Array(animationNum).fill(0))\r\n\r\n    Object.assign(stateRef.current, { animationIndex })\r\n    setState(state => ({ ...state, heights: newHeights }))\r\n  }\r\n\r\n  function emitEvent(ri, ci, row, ceil) {\r\n    const { ceils, rowIndex } = row\r\n\r\n    onClick && onClick({ row: ceils, ceil, rowIndex, columnIndex: ci })\r\n  }\r\n\r\n  const getBackgroundColor = rowIndex =>\r\n    mergedConfig[rowIndex % 2 === 0 ? 'evenRowBGC' : 'oddRowBGC']\r\n\r\n  useEffect(() => {\r\n    calcData()\r\n\r\n    let start = true\r\n\r\n    function* loop() {\r\n      while (true) {\r\n        yield* animation(start)\r\n\r\n        start = false\r\n\r\n        const { waitTime } = stateRef.current.mergedConfig\r\n\r\n        yield new Promise(resolve => setTimeout(resolve, waitTime - 300))\r\n      }\r\n    }\r\n\r\n    const {\r\n      mergedConfig: { rowNum },\r\n      rows: rowsData\r\n    } = stateRef.current\r\n\r\n    const rowLength = rowsData.length\r\n\r\n    if (rowNum >= rowLength) return\r\n\r\n    return co(loop)\r\n  }, [config, domRef.current])\r\n\r\n  useEffect(onResize, [width, height, domRef.current])\r\n\r\n  const classNames = useMemo(() => classnames('dv-scroll-board', className), [\r\n    className\r\n  ])\r\n\r\n  return (\r\n    <div className={classNames} style={style} ref={domRef}>\r\n      {!!header.length && !!mergedConfig && (\r\n        <div\r\n          className='header'\r\n          style={{ backgroundColor: `${mergedConfig.headerBGC}` }}\r\n        >\r\n          {header.map((headerItem, i) => (\r\n            <div\r\n              className='header-item'\r\n              key={headerItem + i}\r\n              style={{\r\n                height: `${mergedConfig.headerHeight}px`,\r\n                lineHeight: `${mergedConfig.headerHeight}px`,\r\n                width: `${widths[i]}px`\r\n              }}\r\n              align={aligns[i]}\r\n              dangerouslySetInnerHTML={{ __html: headerItem }}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {!!mergedConfig && (\r\n        <div\r\n          className='rows'\r\n          style={{\r\n            height: `${height -\r\n              (header.length ? mergedConfig.headerHeight : 0)}px`\r\n          }}\r\n        >\r\n          {rows.map((row, ri) => (\r\n            <div\r\n              className='row-item'\r\n              key={row.toString() + row.scroll}\r\n              style={{\r\n                height: `${heights[ri]}px`,\r\n                lineHeight: `${heights[ri]}px`,\r\n                backgroundColor: `${getBackgroundColor(row.rowIndex)}`\r\n              }}\r\n            >\r\n              {row.ceils.map((ceil, ci) => (\r\n                <div\r\n                  className='ceil'\r\n                  key={ceil + ri + ci}\r\n                  style={{ width: `${widths[ci]}px` }}\r\n                  align={aligns[ci]}\r\n                  dangerouslySetInnerHTML={{ __html: ceil }}\r\n                  onClick={() => emitEvent(ri, ci, row, ceil)}\r\n                />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nScrollBoard.propTypes = {\r\n  config: PropTypes.object,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object\r\n}\r\n\r\n// 指定 props 的默认值：\r\nScrollBoard.defaultProps = {\r\n  config: {}\r\n}\r\n\r\nexport default ScrollBoard\r\n"],"names":["defaultConfig","calcHeaderData","header","index","indexHeader","length","unshift","calcRows","data","headerBGC","rowNum","map","row","i","indexTag","ceils","rowIndex","rowLength","d","scroll","calcAligns","mergedConfig","columnNum","aligns","Array","fill","align","deepMerge","ScrollBoard","animation","onClick","config","className","style","useAutoResize","width","height","domRef","useState","state","setState","rows","widths","heights","stateRef","useRef","assign","current","onResize","calcWidths","rowsData","calcHeights","calcData","deepClone","columnWidth","usedWidth","reduce","all","w","avgWidth","headerHeight","allHeight","avgHeight","start","animationIndex","waitTime","carousel","Promise","setTimeout","resolve","slice","push","animationNum","back","splice","newHeights","emitEvent","ri","ci","ceil","columnIndex","getBackgroundColor","loop","co","classNames","useMemo","classnames","React","backgroundColor","headerItem","__html","toString","propTypes","PropTypes","object","func","string","defaultProps"],"mappings":"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"}