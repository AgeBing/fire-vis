{"version":3,"file":"index.js","sources":["../../src/components/decoration3/index.js"],"sourcesContent":["import React, { useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport classnames from 'classnames'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport useAutoResize from '../../use/autoResize'\r\n\r\nimport './style.less'\r\n\r\nconst defaultColor = ['#7acaec', 'transparent']\r\n\r\nconst pointSideLength = 7\r\n\r\nconst svgWH = [300, 35]\r\n\r\nconst rowNum = 2\r\n\r\nconst rowPoints = 25\r\n\r\nconst halfPointSideLength = pointSideLength / 2\r\n\r\nfunction getPoints() {\r\n  const [w, h] = svgWH\r\n\r\n  const horizontalGap = w / (rowPoints + 1)\r\n  const verticalGap = h / (rowNum + 1)\r\n\r\n  let points = new Array(rowNum)\r\n    .fill(0)\r\n    .map((foo, i) =>\r\n      new Array(rowPoints)\r\n        .fill(0)\r\n        .map((foo, j) => [horizontalGap * (j + 1), verticalGap * (i + 1)])\r\n    )\r\n\r\n  return points.reduce((all, item) => [...all, ...item], [])\r\n}\r\n\r\nconst Decoration = ({ className, style, color = [] }) => {\r\n  const { width, height, domRef } = useAutoResize()\r\n\r\n  function calcSVGData() {\r\n    return {\r\n      points: getPoints(),\r\n      svgScale: [width / svgWH[0], height / svgWH[1]]\r\n    }\r\n  }\r\n\r\n  const mergedColor = useMemo(() => deepMerge(deepClone(defaultColor, true), color || []), [color])\r\n\r\n  const { svgScale, points } = useMemo(calcSVGData, [width, height])\r\n\r\n  const classNames = useMemo(() => classnames('dv-decoration-3', className), [\r\n    className\r\n  ])\r\n\r\n  return (\r\n    <div className={classNames} style={style} ref={domRef}>\r\n      <svg\r\n        width={`${svgWH[0]}px`}\r\n        height={`${svgWH[1]}px`}\r\n        style={{ transform: `scale(${svgScale[0]},${svgScale[1]})` }}\r\n      >\r\n        {points.map((point, i) => (\r\n          <rect\r\n            key={i}\r\n            fill={mergedColor[0]}\r\n            x={point[0] - halfPointSideLength}\r\n            y={point[1] - halfPointSideLength}\r\n            width={pointSideLength}\r\n            height={pointSideLength}\r\n          >\r\n            {Math.random() > 0.6 && (\r\n              <animate\r\n                attributeName='fill'\r\n                values={`${mergedColor.join(';')}`}\r\n                dur={Math.random() + 1 + 's'}\r\n                begin={Math.random() * 2}\r\n                repeatCount='indefinite'\r\n              />\r\n            )}\r\n          </rect>\r\n        ))}\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n\r\nDecoration.propTypes = {\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  color: PropTypes.array\r\n}\r\n\r\nexport default Decoration\r\n"],"names":["defaultColor","pointSideLength","svgWH","rowNum","rowPoints","halfPointSideLength","getPoints","w","h","horizontalGap","verticalGap","points","Array","fill","map","foo","i","j","reduce","all","item","Decoration","className","style","color","useAutoResize","width","height","domRef","calcSVGData","mergedColor","useMemo","deepMerge","deepClone","svgScale","classNames","classnames","React","transform","point","random","join","Math","propTypes","PropTypes","string","object","array"],"mappings":";;;;;;;;;;;;;;;;AAaA,IAAMA,eAAe,CAAC,SAAD,EAAY,aAAZ,CAArB;;AAEA,IAAMC,kBAAkB,CAAxB;;AAEA,IAAMC,QAAQ,CAAC,GAAD,EAAM,EAAN,CAAd;;AAEA,IAAMC,SAAS,CAAf;;AAEA,IAAMC,YAAY,EAAlB;;AAEA,IAAMC,sBAAsBJ,kBAAkB,CAA9C;;AAEA,SAASK,SAAT,GAAqB;MACZC,CADY,GACJL,KADI;MACTM,CADS,GACJN,KADI;;;MAGbO,gBAAgBF,KAAKH,YAAY,CAAjB,CAAtB;MACMM,cAAcF,KAAKL,SAAS,CAAd,CAApB;;MAEIQ,SAAS,IAAIC,KAAJ,CAAUT,MAAV,EACVU,IADU,CACL,CADK,EAEVC,GAFU,CAEN,UAACC,GAAD,EAAMC,CAAN;WACH,IAAIJ,KAAJ,CAAUR,SAAV,EACGS,IADH,CACQ,CADR,EAEGC,GAFH,CAEO,UAACC,GAAD,EAAME,CAAN;aAAY,CAACR,iBAAiBQ,IAAI,CAArB,CAAD,EAA0BP,eAAeM,IAAI,CAAnB,CAA1B,CAAZ;KAFP,CADG;GAFM,CAAb;;SAQOL,OAAOO,MAAP,CAAc,UAACC,GAAD,EAAMC,IAAN;qDAAmBD,GAAnB,mCAA2BC,IAA3B;GAAd,EAAgD,EAAhD,CAAP;;;AAGF,IAAMC,aAAa,SAAbA,UAAa,OAAsC;MAAnCC,SAAmC,QAAnCA,SAAmC;MAAxBC,KAAwB,QAAxBA,KAAwB;wBAAjBC,KAAiB;MAAjBA,KAAiB,8BAAT,EAAS;;uBACrBC,0BADqB;MAC/CC,KAD+C,kBAC/CA,KAD+C;MACxCC,MADwC,kBACxCA,MADwC;MAChCC,MADgC,kBAChCA,MADgC;;WAG9CC,WAAT,GAAuB;WACd;cACGvB,WADH;gBAEK,CAACoB,QAAQxB,MAAM,CAAN,CAAT,EAAmByB,SAASzB,MAAM,CAAN,CAA5B;KAFZ;;;MAMI4B,cAAcC,cAAQ;WAAMC,iBAAUC,iBAAUjC,YAAV,EAAwB,IAAxB,CAAV,EAAyCwB,SAAS,EAAlD,CAAN;GAAR,EAAqE,CAACA,KAAD,CAArE,CAApB;;iBAE6BO,cAAQF,WAAR,EAAqB,CAACH,KAAD,EAAQC,MAAR,CAArB,CAZ0B;MAY/CO,QAZ+C,YAY/CA,QAZ+C;MAYrCvB,MAZqC,YAYrCA,MAZqC;;MAcjDwB,aAAaJ,cAAQ;WAAMK,mBAAW,iBAAX,EAA8Bd,SAA9B,CAAN;GAAR,EAAwD,CACzEA,SADyE,CAAxD,CAAnB;;SAKEe;;MAAK,WAAWF,UAAhB,EAA4B,OAAOZ,KAAnC,EAA0C,KAAKK,MAA/C;;;;eAEc1B,MAAM,CAAN,CAAV,OADF;gBAEaA,MAAM,CAAN,CAAX,OAFF;eAGS,EAAEoC,sBAAoBJ,SAAS,CAAT,CAApB,SAAmCA,SAAS,CAAT,CAAnC,MAAF;;aAECpB,GAAP,CAAW,UAACyB,KAAD,EAAQvB,CAAR;eACVqB;;;iBACOrB,CADP;kBAEQc,YAAY,CAAZ,CAFR;eAGKS,MAAM,CAAN,IAAWlC,mBAHhB;eAIKkC,MAAM,CAAN,IAAWlC,mBAJhB;mBAKSJ,eALT;oBAMUA;;eAEFuC,MAAL,KAAgB,GAAhB,IACCH;2BACgB,MADhB;yBAEaP,YAAYW,IAAZ,CAAiB,GAAjB,CAFb;iBAGOC,KAAKF,MAAL,KAAgB,CAAhB,GAAoB,GAH3B;mBAISE,KAAKF,MAAL,KAAgB,CAJzB;yBAKc;;SAfR;OAAX;;GAPP;CAlBF;;AAkDAnB,WAAWsB,SAAX,GAAuB;aACVC,yBAAUC,MADA;SAEdD,yBAAUE,MAFI;SAGdF,yBAAUG;CAHnB;;;;"}