{"version":3,"file":"index.js","sources":["../../src/components/decoration1/index.js"],"sourcesContent":["import React, { useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport classnames from 'classnames'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport useAutoResize from '../../use/autoResize'\r\n\r\nimport './style.less'\r\n\r\nconst defaultColor = ['#fff', '#0de7c2']\r\n\r\nconst pointSideLength = 2.5\r\n\r\nconst halfPointSideLength = pointSideLength / 2\r\n\r\nconst svgWH = [200, 50]\r\n\r\nconst rowNum = 4\r\n\r\nconst rowPoints = 20\r\n\r\nfunction getPoints() {\r\n  const [w, h] = svgWH\r\n\r\n  const horizontalGap = w / (rowPoints + 1)\r\n  const verticalGap = h / (rowNum + 1)\r\n\r\n  const points = new Array(rowNum)\r\n    .fill(0)\r\n    .map((foo, i) =>\r\n      new Array(rowPoints)\r\n        .fill(0)\r\n        .map((foo, j) => [horizontalGap * (j + 1), verticalGap * (i + 1)])\r\n    )\r\n\r\n  return points.reduce((all, item) => [...all, ...item], [])\r\n}\r\n\r\nconst Decoration = ({ className, style, color = [] }) => {\r\n  const { width, height, domRef } = useAutoResize()\r\n\r\n  function calcSVGData() {\r\n    const points = getPoints()\r\n\r\n    return {\r\n      points,\r\n      rects: [points[rowPoints * 2 - 1], points[rowPoints * 2 - 3]],\r\n      svgScale: [width / svgWH[0], height / svgWH[1]]\r\n    }\r\n  }\r\n\r\n  const mergedColor = useMemo(() => deepMerge(deepClone(defaultColor, true), color || []), [color])\r\n\r\n  const { svgScale, points, rects } = useMemo(calcSVGData, [width, height])\r\n\r\n  const classNames = useMemo(() => classnames('dv-decoration-1', className), [\r\n    className\r\n  ])\r\n\r\n  return (\r\n    <div className={classNames} style={style} ref={domRef}>\r\n      <svg\r\n        width={`${svgWH[0]}px`}\r\n        height={`${svgWH[1]}px`}\r\n        style={{ transform: `scale(${svgScale[0]},${svgScale[1]})` }}\r\n      >\r\n        {points.reduce((prev, point, i) => {\r\n          return Math.random() > 0.6\r\n            ? [\r\n              ...prev,\r\n              <rect\r\n                key={i}\r\n                fill={mergedColor[0]}\r\n                x={point[0] - halfPointSideLength}\r\n                y={point[1] - halfPointSideLength}\r\n                width={pointSideLength}\r\n                height={pointSideLength}\r\n              >\r\n                {Math.random() > 0.6 && (\r\n                  <animate\r\n                    attributeName='fill'\r\n                    values={`${mergedColor[0]};transparent`}\r\n                    dur='1s'\r\n                    begin={Math.random() * 2}\r\n                    repeatCount='indefinite'\r\n                  />\r\n                )}\r\n              </rect>\r\n            ]\r\n            : prev\r\n        }, [])}\r\n        {!!rects[0] && (\r\n          <rect\r\n            fill={mergedColor[1]}\r\n            x={rects[0][0] - pointSideLength}\r\n            y={rects[0][1] - pointSideLength}\r\n            width={pointSideLength * 2}\r\n            height={pointSideLength * 2}\r\n          >\r\n            <animate\r\n              attributeName='width'\r\n              values={`0;${pointSideLength * 2}`}\r\n              dur='2s'\r\n              repeatCount='indefinite'\r\n            />\r\n            <animate\r\n              attributeName='height'\r\n              values={`0;${pointSideLength * 2}`}\r\n              dur='2s'\r\n              repeatCount='indefinite'\r\n            />\r\n            <animate\r\n              attributeName='x'\r\n              values={`${rects[0][0]};${rects[0][0] - pointSideLength}`}\r\n              dur='2s'\r\n              repeatCount='indefinite'\r\n            />\r\n            <animate\r\n              attributeName='y'\r\n              values={`${rects[0][1]};${rects[0][1] - pointSideLength}`}\r\n              dur='2s'\r\n              repeatCount='indefinite'\r\n            />\r\n          </rect>\r\n        )}\r\n        {!!rects[1] && (\r\n          <rect\r\n            fill={mergedColor[1]}\r\n            x={rects[1][0] - 40}\r\n            y={rects[1][1] - pointSideLength}\r\n            width='40'\r\n            height={pointSideLength * 2}\r\n          >\r\n            <animate\r\n              attributeName='width'\r\n              values='0;40;0'\r\n              dur='2s'\r\n              repeatCount='indefinite'\r\n            />\r\n            <animate\r\n              attributeName='x'\r\n              values={`${rects[1][0]};${rects[1][0] - 40};${rects[1][0]}`}\r\n              dur='2s'\r\n              repeatCount='indefinite'\r\n            />\r\n          </rect>\r\n        )}\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n\r\nDecoration.propTypes = {\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  color: PropTypes.array\r\n}\r\n\r\nexport default Decoration\r\n"],"names":["defaultColor","pointSideLength","halfPointSideLength","svgWH","rowNum","rowPoints","getPoints","w","h","horizontalGap","verticalGap","points","Array","fill","map","foo","i","j","reduce","all","item","Decoration","className","style","color","useAutoResize","width","height","domRef","calcSVGData","mergedColor","useMemo","deepMerge","deepClone","svgScale","rects","classNames","classnames","React","transform","prev","point","Math","random","propTypes","PropTypes","string","object","array"],"mappings":"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"}