{"version":3,"file":"index.js","sources":["../../src/components/decoration10/index.js"],"sourcesContent":["import React, { useRef, useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport classnames from 'classnames'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport useAutoResize from '../../use/autoResize'\r\n\r\nimport './style.less'\r\n\r\nconst defaultColor = ['#00c2ff', 'rgba(0, 194, 255, 0.3)']\r\n\r\nconst Decoration = ({ className, style, color = [] }) => {\r\n  const { width, height, domRef } = useAutoResize()\r\n\r\n  const {\r\n    animationId1,\r\n    animationId2,\r\n    animationId3,\r\n    animationId4,\r\n    animationId5,\r\n    animationId6,\r\n    animationId7\r\n  } = useRef({\r\n    animationId1: `d10ani1${Date.now()}`,\r\n    animationId2: `d10ani2${Date.now()}`,\r\n    animationId3: `d10ani3${Date.now()}`,\r\n    animationId4: `d10ani4${Date.now()}`,\r\n    animationId5: `d10ani5${Date.now()}`,\r\n    animationId6: `d10ani6${Date.now()}`,\r\n    animationId7: `d10ani7${Date.now()}`\r\n  }).current\r\n\r\n  const mergedColor = useMemo(() => deepMerge(deepClone(defaultColor, true), color || []), [color])\r\n\r\n  const classNames = useMemo(() => classnames('dv-decoration-10', className), [\r\n    className\r\n  ])\r\n\r\n  return (\r\n    <div className={classNames} style={style} ref={domRef}>\r\n      <svg width={width} height={height}>\r\n        <polyline\r\n          stroke={mergedColor[1]}\r\n          strokeWidth='2'\r\n          points={`0, ${height / 2} ${width}, ${height / 2}`}\r\n        />\r\n\r\n        <polyline\r\n          stroke={mergedColor[0]}\r\n          strokeWidth='2'\r\n          points={`5, ${height / 2} ${width * 0.2 - 3}, ${height / 2}`}\r\n          strokeDasharray={`0, ${width * 0.2}`}\r\n          fill='freeze'\r\n        >\r\n          <animate\r\n            id={animationId2}\r\n            attributeName='stroke-dasharray'\r\n            values={`0, ${width * 0.2};${width * 0.2}, 0;`}\r\n            dur='3s'\r\n            begin={`${animationId1}.end`}\r\n            fill='freeze'\r\n          />\r\n          <animate\r\n            attributeName='stroke-dasharray'\r\n            values={`${width * 0.2}, 0;0, ${width * 0.2}`}\r\n            dur='0.01s'\r\n            begin={`${animationId7}.end`}\r\n            fill='freeze'\r\n          />\r\n        </polyline>\r\n\r\n        <polyline\r\n          stroke={mergedColor[0]}\r\n          strokeWidth='2'\r\n          points={`${width * 0.2 + 3}, ${height / 2} ${width * 0.8 -\r\n            3}, ${height / 2}`}\r\n          strokeDasharray={`0, ${width * 0.6}`}\r\n        >\r\n          <animate\r\n            id={animationId4}\r\n            attributeName='stroke-dasharray'\r\n            values={`0, ${width * 0.6};${width * 0.6}, 0`}\r\n            dur='3s'\r\n            begin={`${animationId3}.end + 1s`}\r\n            fill='freeze'\r\n          />\r\n          <animate\r\n            attributeName='stroke-dasharray'\r\n            values={`${width * 0.6}, 0;0, ${width * 0.6}`}\r\n            dur='0.01s'\r\n            begin={`${animationId7}.end`}\r\n            fill='freeze'\r\n          />\r\n        </polyline>\r\n\r\n        <polyline\r\n          stroke={mergedColor[0]}\r\n          strokeWidth='2'\r\n          points={`${width * 0.8 + 3}, ${height / 2} ${width - 5}, ${height /\r\n            2}`}\r\n          strke-dasharray={`0, ${width * 0.2}`}\r\n        >\r\n          <animate\r\n            id={animationId6}\r\n            attributeName='stroke-dasharray'\r\n            values={`0, ${width * 0.2};${width * 0.2}, 0`}\r\n            dur='3s'\r\n            begin={`${animationId5}.end + 1s`}\r\n            fill='freeze'\r\n          />\r\n          <animate\r\n            attributeName='stroke-dasharray'\r\n            values={`${width * 0.2}, 0;0, ${width * 0.3}`}\r\n            dur='0.01s'\r\n            begin={`${animationId7}.end`}\r\n            fill='freeze'\r\n          />\r\n        </polyline>\r\n\r\n        <circle cx='2' cy={height / 2} r='2' fill={mergedColor[1]}>\r\n          <animate\r\n            id={animationId1}\r\n            attributeName='fill'\r\n            values={`${mergedColor[1]};${mergedColor[0]}`}\r\n            begin={`0s;${animationId7}.end`}\r\n            dur='0.3s'\r\n            fill='freeze'\r\n          />\r\n        </circle>\r\n\r\n        <circle cx={width * 0.2} cy={height / 2} r='2' fill={mergedColor[1]}>\r\n          <animate\r\n            id={animationId3}\r\n            attributeName='fill'\r\n            values={`${mergedColor[1]};${mergedColor[0]}`}\r\n            begin={`${animationId2}.end`}\r\n            dur='0.3s'\r\n            fill='freeze'\r\n          />\r\n          <animate\r\n            attributeName='fill'\r\n            values={`${mergedColor[1]};${mergedColor[1]}`}\r\n            dur='0.01s'\r\n            begin={`${animationId7}.end`}\r\n            fill='freeze'\r\n          />\r\n        </circle>\r\n\r\n        <circle cx={width * 0.8} cy={height / 2} r='2' fill={mergedColor[1]}>\r\n          <animate\r\n            id={animationId5}\r\n            attributeName='fill'\r\n            values={`${mergedColor[1]};${mergedColor[0]}`}\r\n            begin={`${animationId4}.end`}\r\n            dur='0.3s'\r\n            fill='freeze'\r\n          />\r\n          <animate\r\n            attributeName='fill'\r\n            values={`${mergedColor[1]};${mergedColor[1]}`}\r\n            dur='0.01s'\r\n            begin={`${animationId7}.end`}\r\n            fill='freeze'\r\n          />\r\n        </circle>\r\n\r\n        <circle cx={width - 2} cy={height / 2} r='2' fill={mergedColor[1]}>\r\n          <animate\r\n            id={animationId7}\r\n            attributeName='fill'\r\n            values={`${mergedColor[1]};${mergedColor[0]}`}\r\n            begin={`${animationId6}.end`}\r\n            dur='0.3s'\r\n            fill='freeze'\r\n          />\r\n          <animate\r\n            attributeName='fill'\r\n            values={`${mergedColor[1]};${mergedColor[1]}`}\r\n            dur='0.01s'\r\n            begin={`${animationId7}.end`}\r\n            fill='freeze'\r\n          />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n\r\nDecoration.propTypes = {\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  color: PropTypes.array\r\n}\r\n\r\nexport default Decoration\r\n"],"names":["defaultColor","Decoration","className","style","color","useAutoResize","width","height","domRef","useRef","Date","now","current","animationId1","animationId2","animationId3","animationId4","animationId5","animationId6","animationId7","mergedColor","useMemo","deepMerge","deepClone","classNames","classnames","React","propTypes","PropTypes","string","object","array"],"mappings":"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"}