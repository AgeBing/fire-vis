{"version":3,"file":"index.js","sources":["../../src/components/activeRingChart/index.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useMemo } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport classnames from 'classnames'\r\n\r\nimport Charts from '@jiaminghi/charts'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport DigitalFlop from '../digitalFlop'\r\n\r\nimport { co } from '../../util'\r\n\r\nimport './style.less'\r\n\r\nconst defaultConfig = {\r\n  /**\r\n   * @description Ring radius\r\n   * @type {String|Number}\r\n   * @default radius = '50%'\r\n   * @example radius = '50%' | 100\r\n   */\r\n  radius: '50%',\r\n  /**\r\n   * @description Active ring radius\r\n   * @type {String|Number}\r\n   * @default activeRadius = '55%'\r\n   * @example activeRadius = '55%' | 110\r\n   */\r\n  activeRadius: '55%',\r\n  /**\r\n   * @description Ring data\r\n   * @type {Array<Object>}\r\n   * @default data = [{ name: '', value: 0 }]\r\n   */\r\n  data: [{ name: '', value: 0 }],\r\n  /**\r\n   * @description Ring line width\r\n   * @type {Number}\r\n   * @default lineWidth = 20\r\n   */\r\n  lineWidth: 20,\r\n  /**\r\n   * @description Active time gap (ms)\r\n   * @type {Number}\r\n   * @default activeTimeGap = 3000\r\n   */\r\n  activeTimeGap: 3000,\r\n  /**\r\n   * @description Ring color (hex|rgb|rgba|color keywords)\r\n   * @type {Array<String>}\r\n   * @default color = [Charts Default Color]\r\n   * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\r\n   */\r\n  color: [],\r\n  /**\r\n   * @description Digital flop style\r\n   * @type {Object}\r\n   */\r\n  digitalFlopStyle: {\r\n    fontSize: 25,\r\n    fill: '#fff'\r\n  },\r\n  /**\r\n   * @description CRender animationCurve\r\n   * @type {String}\r\n   * @default animationCurve = 'easeOutCubic'\r\n   */\r\n  animationCurve: 'easeOutCubic',\r\n  /**\r\n   * @description CRender animationFrame\r\n   * @type {String}\r\n   * @default animationFrame = 50\r\n   */\r\n  animationFrame: 50\r\n}\r\n\r\nconst ActiveRingChart = ({ config = {}, className, style }) => {\r\n  const [{ activeIndex, mergedConfig }, setState] = useState({\r\n    activeIndex: 0,\r\n    mergedConfig: null\r\n  })\r\n\r\n  const domRef = useRef(null)\r\n  const chartRef = useRef(null)\r\n\r\n  const digitalFlop = useMemo(() => {\r\n    if (!mergedConfig) return {}\r\n\r\n    const { digitalFlopStyle, data } = mergedConfig\r\n\r\n    const value = data.map(({ value }) => value)\r\n\r\n    const sum = value.reduce((all, v) => all + v, 0)\r\n\r\n    const percent = parseInt((value[activeIndex] / sum) * 100) || 0\r\n\r\n    return { content: '{nt}%', number: [percent], style: digitalFlopStyle }\r\n  }, [mergedConfig, activeIndex])\r\n\r\n  const ringName = useMemo(\r\n    () => (!mergedConfig ? '' : mergedConfig.data[activeIndex].name),\r\n    [mergedConfig, activeIndex]\r\n  )\r\n\r\n  const fontSize = useMemo(\r\n    () =>\r\n      !mergedConfig\r\n        ? {}\r\n        : { fontSize: `${mergedConfig.digitalFlopStyle.fontSize}px` },\r\n    [mergedConfig]\r\n  )\r\n\r\n  function getRingOption(mergedConfig) {\r\n    const radius = getRealRadius(mergedConfig)\r\n\r\n    const newMergedConfig = {\r\n      ...mergedConfig,\r\n      data: mergedConfig.data.map(item => ({ ...item, radius }))\r\n    }\r\n\r\n    return {\r\n      series: [\r\n        {\r\n          type: 'pie',\r\n          ...newMergedConfig,\r\n          outsideLabel: {\r\n            show: false\r\n          }\r\n        }\r\n      ],\r\n      color: newMergedConfig.color\r\n    }\r\n  }\r\n\r\n  function getRealRadius({ radius, activeRadius, lineWidth }, active = false) {\r\n    const maxRadius = Math.min(...chartRef.current.render.area) / 2\r\n\r\n    const halfLineWidth = lineWidth / 2\r\n\r\n    let realRadius = active ? activeRadius : radius\r\n\r\n    if (typeof realRadius !== 'number') {\r\n      realRadius = (parseInt(realRadius) / 100) * maxRadius\r\n    }\r\n\r\n    const insideRadius = realRadius - halfLineWidth\r\n    const outSideRadius = realRadius + halfLineWidth\r\n\r\n    return [insideRadius, outSideRadius]\r\n  }\r\n\r\n  function getOption(mergedConfig, activeIndex) {\r\n    const radius = getRealRadius(mergedConfig)\r\n    const active = getRealRadius(mergedConfig, true)\r\n\r\n    let option = getRingOption(mergedConfig)\r\n\r\n    return {\r\n      ...option,\r\n      series: option.series.reduce(\r\n        (prev, serie, index) =>\r\n          index !== 0\r\n            ? [...prev, serie]\r\n            : [\r\n              ...prev,\r\n              {\r\n                ...serie,\r\n                data: serie.data.map((item, i) => ({\r\n                  ...item,\r\n                  radius: i === activeIndex ? active : radius\r\n                }))\r\n              }\r\n            ],\r\n        []\r\n      )\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // 第一次时初始化\r\n    chartRef.current || (chartRef.current = new Charts(domRef.current))\r\n\r\n    const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n\r\n    chartRef.current.setOption(getRingOption(mergedConfig), true)\r\n\r\n    let activeIndex = 0\r\n\r\n    function * loop() {\r\n      while (true) {\r\n        setState({ mergedConfig, activeIndex })\r\n\r\n        const option = getOption(mergedConfig, activeIndex)\r\n\r\n        chartRef.current.setOption(option, true)\r\n\r\n        const { activeTimeGap, data } = option.series[0]\r\n\r\n        yield new Promise(resolve => setTimeout(resolve, activeTimeGap))\r\n\r\n        activeIndex += 1\r\n\r\n        if (activeIndex >= data.length) {\r\n          activeIndex = 0\r\n        }\r\n      }\r\n    }\r\n\r\n    return co(loop)\r\n  }, [config])\r\n\r\n  const classNames = useMemo(\r\n    () => classnames('dv-active-ring-chart', className),\r\n    [className]\r\n  )\r\n\r\n  return (\r\n    <div className={classNames} style={style}>\r\n      <div className='active-ring-chart-container' ref={domRef} />\r\n      <div className='active-ring-info'>\r\n        <DigitalFlop config={digitalFlop} />\r\n        <div className='active-ring-name' style={fontSize}>\r\n          {ringName}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nActiveRingChart.propTypes = {\r\n  config: PropTypes.object,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object\r\n}\r\n\r\n// 指定 props 的默认值：\r\nActiveRingChart.defaultProps = {\r\n  config: {}\r\n}\r\n\r\nexport default ActiveRingChart\r\n"],"names":["defaultConfig","name","value","ActiveRingChart","config","className","style","useState","activeIndex","mergedConfig","setState","domRef","useRef","chartRef","digitalFlop","useMemo","digitalFlopStyle","data","map","sum","reduce","all","v","percent","parseInt","content","number","ringName","fontSize","getRingOption","radius","getRealRadius","newMergedConfig","item","color","activeRadius","lineWidth","active","maxRadius","Math","min","current","render","area","halfLineWidth","realRadius","insideRadius","outSideRadius","getOption","option","series","prev","serie","index","i","loop","Charts","deepMerge","deepClone","setOption","activeTimeGap","Promise","setTimeout","resolve","length","co","classNames","classnames","propTypes","PropTypes","object","string","defaultProps"],"mappings":"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"}